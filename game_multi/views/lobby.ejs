<!DOCTYPE html>
<html>
    <head>
        <title>hello <%=name%></title>
        <link rel = "stylesheet" href = "/style/lobby.css">
        <script src = "/scripts/socket.io.js"></script>
    </head>
    <body style = "background: #101010; color:white;">
        <div style="margin-bottom: 1rem;border-bottom: 0.1rem white solid;">
            <button id = "btn_refresh" onclick = "refresh();" style = "display:none"></button>
            <div style = "display: flex;align-items: center;">
                <h3 style = "margin-right: 1rem;">Room List</h3>
                <label for = "btn_refresh"><p style = "border: 0.5px white solid;padding: 0.1rem 0.5rem 0.1rem 0.5rem;"> ìƒˆë¡œê³ ì¹¨ ðŸ”„</p></label>
            </div>
            <ol id = "roomList">

            </ol>
        </div>
        <div style = "border: 0.5px white solid;width: fit-content;padding: 0.3rem;">
            <a href = "/makingRoom">ë°© ë§Œë“¤ê¸°</a>
        </div>
        <!--
        <div>
            <h5 style = "text-align:center;" draggable = "false">CHATTING</h5>
            <div id = "chatbox" style = "height:200px; overflow:hidden;"></div>
                <form action = "javascript:sendMSG()">
                    <div style = "display: flex;">
                    <input type = "text" id = 'msg' style = "background: none; border: none; border-bottom: 1px white solid;
                    color: white; text-align: center; margin-right:0.5rem" autocomplete="off"><label for = "abc"> 
                    <div style = "border: 0.5px white solid; color: white;
                    padding-left:0.5rem; padding-right:0.5rem; width: fit-content;"> OK </div> </label>
                    <input id = "abc" type="submit" value="ok" style = "display:none;">
                    </div>
                </form>
        </div>
        <div>
            <h5> USER LIST </h5>
        </div>
        -->
    </body>
    <script>
        var socket = io();
        let roomList = "<%= JSON.stringify(roomList)%>";
        var name = '<%=name%>'
        let rl = document.getElementById('roomList');
        roomList = roomList.replaceAll('&#34;', '\"');
        roomList = JSON.parse(roomList);
        function tryingJoin(hash, password){
            socket.emit('trying_connect_room_request', {hash: hash, password: password});
        };
        function updateRoomList(){
            while(rl.hasChildNodes()){rl.removeChild(rl.firstChild);};
            for(let room of roomList){
                let btn = document.createElement('button');
                btn.id = `join_btn_${room['hash']}`;
                btn.addEventListener('click', ()=>{
                    let password = '';
                    if(room['isPassword'])
                        password = prompt('Enter the password');
                    tryingJoin(room['hash'], password);
                })
                btn.style.display = 'none';
                let label = document.createElement('label');
                label.htmlFor = `join_btn_${room['hash']}`;
                let p = document.createElement('li');
                p.textContent = `${room['title']} | ${room['nowPlayer']} / ${room['maxPlayer']} | ` + (room['isPassword'] ?'ðŸ”’':'');
                label.appendChild(p);
                rl.appendChild(label);
                rl.appendChild(btn);
                /*
                let a = document.createElement('a');
                a.href = `/game?room=${room['hash']}`;
            a.appendChild(p);    
            rl.appendChild(a);
            console.log(room['isPassword']);*/
            }
        };
        updateRoomList();
        socket.emit('firstJoin', {type: 'lobby', name: name});
        socket.on('MSG', (data)=>{
            let chatbox  = document.getElementById('chatbox');
            let p = document.createElement('p');
            p.setAttribute('style', 'margin: 0px;')
            // sender = data.sender;
            text = data.text;
            p.textContent = `${text}`;
            chatbox.appendChild(p);
            chatbox.scrollTop = chatbox.scrollHeight;
            console.log(chatbox.scrollTop, chatbox.scrollHeight);
        });
        socket.on('refresh_roomlist_response', (data)=>{
            roomList = data;
            updateRoomList();
        });
        socket.on('trying_connect_room_response', (data)=>{
            if(data.ret.result)
            {
                window.location.href = `/game?room=${data.hash}&key=${data.ret.key}`;
            }
            else{
                if(data.ret.errcode == 1)
                    alert('This room is full');
                else if(data.ret.errcode == 2)
                    alert('Wrong password');
            }
        });
        function sendMSG(){
            let text = document.getElementById('msg').value;
            document.getElementById('msg').value = '';
            socket.emit('sendMSG', text);
        }
        function refresh(){
            socket.emit('refresh_roomlist_request', '');
        }
    </script>
</html>