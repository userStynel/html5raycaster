<!DOCTYPE html>
<html>
    <head>
        <title>hello <%=name%></title>
        <link rel = "stylesheet" href = "/style/lobby.css">
        <link rel = "stylesheet" href ="/style/common.css">
        <script src = "/scripts/socket.io.js"></script>
    </head>
    <body class = "background">
        <div id = "room_list_container">
            <h3>ROOM LIST</h3>
            <div id = "room_list_container_content">
                <div id = "room_list_table">
                    <table>
                        <tr>
                            <th>Name</th>
                            <th>Players</th>
                            <th>Password</th>
                        </tr>
                    </table>
                </div>
                <div id = "room_buttons_container">
                    <div class = "room_buttons" id = "btn_refresh">Refresh</div>
                    <div class = "room_buttons" id = "btn_joinroom">Join Room</div>
                    <div class = "room_buttons" id = "btn_createroom">Create Room</div>
                </div>
            </div>
        </div>
    </body>
    <script>
        function makeTRelementFromRoomInfo(roomInfo){ // roomInfo: {hash, title, maxPlayer, nowPlayer, isPasswordSet}
            let tr = document.createElement('tr');
            tr.setAttribute("class", "roominfo_tr");
            let td_title = document.createElement('td');
            td_title.textContent = roomInfo.title;
            let td_players = document.createElement('td');
            td_players.textContent = `${roomInfo.nowPlayer} / ${roomInfo.maxPlayer}`;
            let td_password = document.createElement('td');
            td_password.textContent = (roomInfo.isPasswordSet) ? 'ðŸ”’' : '';
            
            tr.append(td_title);
            tr.append(td_players);
            tr.append(td_password);
            tr.addEventListener('click', ()=>{
                selectedHash = roomInfo.hash;
                isPasswordSet = roomInfo.isPasswordSet;
            })
            return tr;
        }

        function tryingJoinRoom(roomHash, roomPassword){
            socket.emit('trying_connect_room_request', {roomHash: roomHash, roomPassword: roomPassword});
        };

        function refresh(){
            socket.emit('refresh_roomlist_request', '');
        };

        function updateRoomList(){
            let table = document.querySelector('#room_list_table>table');
            let tbody = table.children[0];
            while(tbody.children.length != 1){ // remove all list from table
                let lastIndex = tbody.children.length - 1;
                tbody.children[lastIndex].remove();
            }
            for(let roomInfo of roomList){
               let tr = makeTRelementFromRoomInfo(roomInfo);
               tbody.append(tr);
            }
        };

        let selectedHash = '';
        let isPasswordSet = false;
        var socket = io();
        let roomList = "<%= JSON.stringify(roomList)%>";
        var name = '<%=name%>'
        let rl = document.getElementById('roomList');
        roomList = roomList.replaceAll('&#34;', '\"');
        roomList = JSON.parse(roomList);

        document.getElementById('btn_createroom').addEventListener('click', ()=>{
            window.location.replace('/makingRoom');
        });

        document.getElementById('btn_refresh').addEventListener('click', ()=>{
            refresh();
        });

        document.getElementById('btn_joinroom').addEventListener('click', ()=>{
            if(selectedHash != ''){
                if(isPasswordSet){
                    let pw = prompt('Enter Password');
                    tryingJoinRoom(selectedHash, pw);
                }
                else {
                    tryingJoinRoom(selectedHash, '');
                }
            }
        });

        updateRoomList();

        socket.emit('client_joined_lobby', {userName: name});

        socket.on('refresh_roomlist_response', (data)=>{
            roomList = data;
            updateRoomList();
        });  

        socket.on('trying_connect_room_response', (data)=>{ // data: {result:{result: bool, errcode: number, key: string}, roomHash:string}
            if(data.result.result){
                let form = document.createElement('form');
                form.setAttribute('method', 'POST');
                form.setAttribute('action', '/game');
                form.hidden = true;
                let input_hash = document.createElement('input');
                input_hash.setAttribute('type', 'text');
                input_hash.setAttribute('name', 'room');
                input_hash.value = data.roomHash;
                let input_key = document.createElement('input');
                input_key.setAttribute('type', 'text');
                input_key.setAttribute('name', 'key');
                input_key.value = data.result.key;
                form.append(input_hash);
                form.append(input_key);
                document.body.appendChild(form);
                form.submit();
            }
            else{
                if(data.result.errcode == 1)
                    alert('This room is full');
                else if(data.result.errcode == 2)
                    alert('Wrong password');
            }
        });
    </script>
</html>